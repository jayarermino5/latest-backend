. Create a github repository
. Clone the repository to your local
. cd <repository>
. npx create-react-app .
. npm start
. Change the title from index.html
. Remove the imports in App.js
. Change the return value of App.js:
    <h1>Hello World<h1>

. Modify index.js
. Remove reportWebVitals, index.css, React.StrictMode
. Make render a one liner code
. Now our application is clean and ready

. npm install bootstrap jquery popper.js
. Import bootstrap in App.js
    import 'bootstrap';
    import 'bootstrap/dist/css/bootstrap.css';
    import 'bootstrap/dist/js/bootstrap.js';

. Install react-router-dom
    npm install react-router-dom

. Import react-router-dom in App.js
    import {BrowserRouter as Router, Route} from 'react-router-dom';

. cd src
. mkdir components
. touch components/navbar.component.js
. Insert codes in navbar.component.js
    import React, {Components} from 'react';
    import {Link} from 'react-router-dom';

    export default class Navbar extends Component {
        render() {
            return(
                <div>
                    <h1>MERN Tutorial</h1>
                </div>
            )
        }
    }

. Import Navbar to App.js
    import Navbar from './components/navbar.component';

. Modify App.js return:
    <Navbar/>

. Go to getbootstrap.com, go to samples and get the code for carousel
. Copy the source code for the nav and paste it on the return value of navbar.component.js
. Remove the form
. Change the class to className, use Ctrl + D to select same texts
. Change a tag to Link tag, hold Alt then highlight the texts
. Use Auto Rename Tag extension
. Change the label of the Link tag

. Modify App.js return
    <Router>
        <Navbar/>
        <br>
        <Route path="/" component={} />
        <Route path="/edit/:id" component={} />
        <Route path="/create" component={} />
    </Router>

. touch components/create-user.component.js
. touch components/edit-user.component.js
. touch components/user-list.component.js

. Insert the following codes on the 3 new components
    import React, {Component} from 'react';
    import {Link} from 'react-router-dom';

. Insert the codes to user-list.component.js
    export default class UserList extends Component {
        render() {
            return(
                <div className="container"><h1>User List</h1></div>
            )
        }
    }

. Insert the codes to create-user.component.js
    export default class CreateUser extends Component {
        render() {
            return(
                <div className="container"><h1>Create User</h1></div>
            )
        }
    }

. Insert the codes to edit-user.component.js
    export default class EditUser extends Component {
        render() {
            return(
                <div className="container"><h1>Edit User</h1></div>
            )
        }
    }

. Import UserList, CreateUser and EditUser to App.js
    import UserList from './components/user-list.component.js';
    import CreateUser from './components/create-user.component.js';
    import EditUser from './components/edit-user.component.js';

. Modify App.js:
    <Route path="/" component={UserList} />
    <Route path="/edit/:id" component={EditUser} />
    <Route path="/create" component={CreateUser} />

. Change the first and second href into to="/", third into to="/create"
. Remove the extra Link tag

. Modify nav className:
    <nav className="navbar navbar-expand-lg ...

. Modify App.js:
    <Route path="/" exact component={UserList} />

. Modify create-user.component.js
    export default class CreateUser extends Component {
        constructor(props) {
            super(props)

            this.state = {
                fullname: '',
                temperature: '',
                email: '',
                phonenumber: ''
            }
        }

        onFullnameChange(e) {
            console.log(e.target.value)
        }

        render() {
            return(
                <div className="container">
                    <h1>Create User</h1>

                        <div className="form-group">
                            <label>Full Name</label>
                            <input className="form-control" type="text" required onChange={this.onFullnameChange}/>
                        </div>    
                </div>
            )
        }
    }
    

. Try it on the browser's console

. Modify create-user.component.js
    onFullnameChange(e) {
        this.setState({
            fullname: e.target.value
        })
    }

. Modify create-user.component.js
    this.state = {
        fullname: '',
        temperature: '',
        email: '',
        phonenumber: ''
    }

    this.onFullnameChange = this.onFullnameChange.bind(this);

. Modify create-user.component.js
    onSubmit(e) {
        e.preventDefault();

        console.log(this.state);
    }

    <form onSubmit={this.onSubmit}>
        <div className="form-group">
            <label>Full Name</label>
            <input className="form-control" type="text" required onChange={this.onFullnameChange}/>

            <button type="submit" className="btn btn-primary">Submit</button> 
        </div> 
    </form>

. Modify create-user.component.js
    this.state = {
        fullname: '',
        temperature: '',
        email: '',
        phonenumber: ''
    }

    this.onFullnameChange = this.onFullnameChange.bind(this);
    this.onSubmit = this.onSubmit.bind(this);

. Comment the onFullnameChange method
. Modify create-user.component.js
    onValueChange(e) {
        // console.log(e.target.dataset.name);

        this.setState({
            [e.target.dataset.name] : e.target.value
        })
    }

    <input className="form-control" type="text" data-name="fullname" required onChange={this.onValueChange}/>

. Modify create-user.component.js
    <label>Full Name</label>
    <input className="form-control" type="text" data-name="fullname" required onChange={this.onValueChange}/>

    <label>Temperature</label>
    <input className="form-control" type="number" step="0.1" data-name="temperature" required onChange={this.onValueChange}/>

    <label>Email</label>
    <input className="form-control" type="email" data-name="email" required onChange={this.onValueChange}/>

    <label>Phone Number</label>
    <input className="form-control" type="tel" data-name="phonenumber" required onChange={this.onValueChange}/>

. Modify create-user.component.js
    this.state = {
        fullname: '',
        temperature: '',
        email: '',
        phonenumber: ''
    }

    //this.onFullnameChange = this.onFullnameChange.bind(this);
    this.onSubmit = this.onSubmit.bind(this);
    this.onValueChange = this.onValueChange.bind(this);

. Install axios
    npm install axios

. Modify create-user.component.js
    import axios from 'axios';

    onSubmit(e) {
        e.preventDefault();

        const health = {
            fullname: this.state.fullname,
            temperature: this.state.temperature,
            email: this.state.email,
            phonenumber: this.state.phonenumber
        }

        axios.post('http://localhost:5000/health/add', health)
            // .then(res => console.log(res.data))
            .then(res => window.location = "/")
            .catch(err => console.log('Error:' + err))
    }

. And we have connected to our API

. Modify user-list.component.js
    import axios from 'axios';

    export default class UserList extends Component {
        constructor(props) {
            super(props)

            this.state = {health: []}
        }

        componentDidMount() { // equivalent to document.ready or onLoad on jquery
            axios.get('http://localhost:5000/health')
                .then(res => {
                    this.setState({health: res.data})
                })
                .catch(error => {
                    console.log(error);
                })
        }

        render() {
            return(
                <div className="container">
                    <h1>User List</h1>

                    <table className="table table-bordered table-hover">
                        <thead className="thead-dark">
                            <tr>
                                <th>Full Name</th>
                                <th>Temperature</th>
                                <th>Email</th>
                                <th>Phone Number</th>
                                <th className="text-center">Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            )
        }
    }

. Modify user-list.component.js
    deleteHealth(id) {
        axios.delete('http://localhost:5000/health' + id)
            .then(res => console.log(res.data))
            this.setState({
                health: this.state.health.filter(el => el._id !== id)
            })
    }

    healthDeclarations() {
        return this.state.health.map(currentHealth => {
            return <Health health={currentHealth} deleteHealth={this.deleteHealth} key={currentHealth._id}/>
        })
    }

. Modify user-list.component.js after imports and before the class
    const Health = props => {
        return() {
            <tr>
                <td>{props.health.fullname}</td>
                <td>{props.health.temperature}</td>
                <td>{props.health.email}</td>
                <td>{props.health.phonenumber}</td>
                <td className="text-center">
                    <Link to={'/edit' + props.health._id} className="btn btn-sm btn-primary">Edit</Link>
                    <a href="#" onClick={() => props.deleteHealth(props.health._id)} className="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    } 

. Modify user-list.component.js
    constructor(props) {
        super(props)

        this.state = {health: []}
        
        this.deleteHealth = this.deleteHealth.bind(this);
    }

. Insert after the <thead> tag
    <tbody>
        {this.healthDeclarations}
    </tbody>

. Copy the codes from create-user.component.js and paste to edit-user.component.js
. Change the class name to EditUser

. Modify edit-user.component.js
    componentDidMount() { 
        axios.get('http://localhost:5000/health' + this.props.match.params.id)
            .then(res => {
                this.setState({
                    fullname: res.data.fullname,
                    temperature: res.data.temperature,
                    email: res.data.email,
                    phonenumber: res.data.phonenumber
                })
            })
            .catch(error => {
                console.log(error);
            })
    }

    onSubmit(e) {
        e.preventDefault();

        const health = {
            fullname: this.state.fullname,
            temperature: this.state.temperature,
            email: this.state.email,
            phonenumber: this.state.phonenumber
        }

        axios.post('http://localhost:5000/health/update', this.props.match.params.id)
            // .then(res => console.log(res.data))
            .then(res => window.location = "/")
            .catch(err => console.log('Error:' + err))
    }

    <label>Full Name</label>
    <input className="form-control" type="text" data-name="fullname" required onChange={this.onValueChange} value={this.state.fullname}/>

    <label>Temperature</label>
    <input className="form-control" type="number" step="0.1" data-name="temperature" required onChange={this.onValueChange} value={this.state.temperature}/>

    <label>Email</label>
    <input className="form-control" type="email" data-name="email" required onChange={this.onValueChange} value={this.state.email}/>

    <label>Phone Number</label>
    <input className="form-control" type="tel" data-name="phonenumber" required onChange={this.onValueChange} value={this.state.phonenumber}/>

. And we are done with our FRONTEND!!!

. Push to your github repository and deploy to herokuapp